{# Page for editing roles on a show. #}
{% extends 'layout.html.twig' %}

{% set current_navigation_id = 'shows' %}
{% block title %}Roles for show “{{ show.name }}”{% endblock %}

{%- block compiled_assets -%}
{{- encore_entry_link_tags('ajax-forms') -}}
{{- encore_entry_script_tags('ajax-forms') -}}
{%- endblock -%}

{% block body %}

{% set current_subnav_id = 'show_add_many_roles' %}
{{ render(controller('Acts\\CamdramBundle\\Controller\\ShowController::adminPanelAction', {show: show})) }}

<h3>Edit roles for <em>{{show.name}}</em></h3>

<div class="panel">
    <p> Adding people to a show’s credits list requires their consent. Please ask for your team members’ permission <em>before</em> adding them!

    <p> You can add people to the show and edit them one-by-one, or copy-paste a list in bulk, e.g. from your programme or company spreadsheet. Please ensure that all names are spelt correctly and that you are following our <a href="{{ path('acts_camdram_userguidelines') }}">User Guidelines</a>.
</div>

<div class="tabbed-content">
    {% for type in ['cast', 'band', 'prod'] %}
        <a class="title {{ loop.index == 1 ? 'active' }}" href="#!">Edit {{ type }}</a>
        <div class="content">
            <div class="editable-role-container" data-show-slug="{{ show.slug }}" data-role-type="{{ type }}"
                data-csrf-delete="{{ csrf_token('delete_show_role') }}"
                data-csrf-patch="{{ csrf_token('patch_show_role') }}">
            {% set roles = show.getRolesByType(type) %}
            {% for role in roles %}
                {{ _self.role_entry(role) }}
            {% endfor %}
            </div>
        </div>
    {% endfor %}

    <a class="title" href="#!">Bulk mode</a>
    <div class="content">
        <p>In bulk mode you can enter as many roles as you like in a text box, but for only one of cast, crew and band at a time. There must be a separator character bewteen the name and the role, e.g. a colon or comma.</p>
        {{ form_start(form, { action: path('post_show_many_roles', {'identifier': show.slug}) }) }}
        {{ form_errors(form) }}

        {{ form_end(form) }}
    </div>
</div>

<style>
.editable-role-container {
    max-width: 40em;
    margin: 0 auto;
}
.editable-role {
    background: white;
    margin: 7px 5px;
    border: solid 1px #ccc;
    border-radius: 2px;
    padding: 0.5em;
    position: relative;
    display: flex;
    align-items: center;
}
.editable-role > input[type=text] {
    margin: 0 0.25em;
    flex: 1;
    /* override useragent value to avoid overspilling the bounds of the row element. */
    min-width: 5em;
}
.editable-role > span, .editable-role > a {
    flex: 1;
}
.editable-role > button.fa {
    margin: 0 0.25em;
}
@media (max-width: 500px) {
    .editable-role { flex-flow: row wrap; }
    .editable-role > input[type=text].editable-role-role {
        flex: 100%;
    }
}
.editable-role.deleted {
    filter: grayscale(50%);
    background: #ddd;
}
.editable-role.deleted > span, .editable-role.deleted > a {
    text-decoration: line-through;
}
.editable-role.deleted > input[type=checkbox] {
    visibility: hidden;
}
button.new-role-button {
    background: white;
    border: 2px solid #888;
    border-radius: 1em;
    display: inline-flex;
    align-items: center;
}
.new-role-button::before {
    content: "";
    display: inline-block;
    width: 13px;
    height: 13px;
    margin: 4px;
    background: linear-gradient(to bottom, transparent 37.5%, #888 37.5%, #888 62.5%, transparent 62.5%),
        linear-gradient(to right, transparent 37.5%, #888 37.5%, #888 62.5%, transparent 62.5%);
}
.new-role-button span {
    display: inline-block;
    overflow: hidden;
    transition: width 350ms 150ms;
    width: 0;
    height: 1em;
    white-space: nowrap;
}
.new-role-button:hover span {
    width: 8em;
}
.editable-role .new-role-button {
    z-index: 5;
    position: absolute;
    top: -17px;
    left: 50%;
    transform: translateX(-50%);
}
.roles-status-icon {
    padding: 8px 0;
}
.sortable-ghost {
    box-shadow: 0 0 5px 1px #999;
}
</style>
{% endblock %}

{% macro role_entry(role) %}
{# non-interactive placeholder content #}
<div class="editable-role" data-role-json="{{ {
    'role': role.role,
    'person': { 'slug': role.person.slug, 'name': role.person.name },
    'id': role.id
} | json_encode() }}">
    <span>{{ role.role }}</span>
    <span>{{ link_entity(role.person) }}</span>
</div>
{% endmacro %}
